/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get the current user
         * @description Get the current user
         */
        get: operations["getMe"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/protected": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a protected resource
         * @description Get a protected resource
         */
        get: operations["getProtectedResource"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rbac": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a resource that requires rbac
         * @description Get a resource that requires rbac
         */
        get: operations["getRbacResource"];
        put?: never;
        /**
         * Create a resource that requires rbac
         * @description Create a resource that requires rbac
         */
        post: operations["createRbacResource"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/unprotected": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get an unprotected resource
         * @description Get an unprotected resource
         */
        get: operations["getUnprotectedResource"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        ErrorMessage: {
            message: string;
        };
        /** @description A protected resource that any authenticated user can access */
        ProtectedResource: {
            /** @description The message of the resource */
            message: string;
            /** @description The secret message of the resource */
            something_secret: string;
        };
        /** @description A protected resource that requires rbac */
        RbacResource: {
            /** @description The message of the resource */
            message: string;
            /** @description The secret message of the resource */
            something_secret: string;
            /** @description The very secret message of the resource */
            something_very_secret: string;
        };
        /** @description An unprotected resource */
        UnprotectedResource: {
            /** @description The message of the resource */
            message: string;
        };
        /** @description A user */
        User: {
            /** @description The user's id */
            user_id: string;
            /** @description The user's first name */
            first_name: string;
            /** @description The user's last name */
            last_name: string;
            /** @description The user's email */
            email: string;
        };
    };
    responses: {
        /** @description Bad input */
        BadInputResponse: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["ErrorMessage"];
            };
        };
        /** @description The specified resource was not found */
        NotFoundResponse: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["ErrorMessage"];
            };
        };
        /** @description Unexpected server error */
        ServerErrorResponse: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["ErrorMessage"];
            };
        };
        /** @description The request is unauthorized */
        UnauthorizedResponse: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["ErrorMessage"];
            };
        };
    };
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getMe: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Ok */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
            401: components["responses"]["UnauthorizedResponse"];
            500: components["responses"]["ServerErrorResponse"];
        };
    };
    getProtectedResource: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Congrats, you captured the protected flag. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProtectedResource"];
                };
            };
            401: components["responses"]["UnauthorizedResponse"];
            500: components["responses"]["ServerErrorResponse"];
        };
    };
    getRbacResource: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Congrats, you captured the rbac flag. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RbacResource"];
                };
            };
            401: components["responses"]["UnauthorizedResponse"];
            404: components["responses"]["NotFoundResponse"];
            500: components["responses"]["ServerErrorResponse"];
        };
    };
    createRbacResource: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RbacResource"];
            };
        };
        responses: {
            /** @description Congrats, you captured the rbac flag. */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RbacResource"];
                };
            };
            400: components["responses"]["BadInputResponse"];
            401: components["responses"]["UnauthorizedResponse"];
            500: components["responses"]["ServerErrorResponse"];
        };
    };
    getUnprotectedResource: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Congrats, you captured the unprotected flag. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UnprotectedResource"];
                };
            };
            500: components["responses"]["ServerErrorResponse"];
        };
    };
}
